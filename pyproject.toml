[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "navien-nwp500"
description = "Python library for Navien NWP500 Heat Pump Water Heaters via NaviLink service"
authors = [
    {name = "Emmanuel Levijarvi", email = "emansl@gmail.com"}
]
license = "MIT"
readme = "README.md"
keywords = ["navien", "nwp500", "water heater", "heat pump", "iot", "smart home", "navilink"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Home Automation",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "aiohttp>=3.8.0",
    "websockets>=10.0",
    "cryptography>=3.4.0", 
    "pydantic>=2.0.0",
    "awsiotsdk>=1.21.0"
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/eman/navien-nwp500-python"
Repository = "https://github.com/eman/navien-nwp500-python"
Documentation = "https://github.com/eman/navien-nwp500-python/blob/main/README.md"
"Bug Reports" = "https://github.com/eman/navien-nwp500-python/issues"
Changelog = "https://github.com/eman/navien-nwp500-python/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=5.0.0",
    "pre-commit>=2.20.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
analysis = [
    "pandas>=1.5.0",
    "matplotlib>=3.5.0",
    "numpy>=1.21.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.scripts]
navien-monitor = "examples.tank_monitoring_production:main"

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "docs*", "reference*"]

[tool.setuptools_scm]
write_to = "navien_nwp500/_version.py"
version_scheme = "post-release"
local_scheme = "dirty-tag"

# Black formatter configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration  
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config --cov=navien_nwp500 --cov-report=term-missing --cov-report=html --cov-report=xml"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["navien_nwp500"]
omit = [
    "*/tests/*",
    "*/examples/*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
